[tool]
[tool.poetry]
name = "django-activity-tracker"
version = "0.1.0"
homepage = "https://github.com/William-Fernandes252/django-activity-tracker"
description = "A reusable Django application to track user actions through the database.."
authors = ["William Fernandes Dias <william.winchester1967@gmail.com>"]
readme = "README.md"
license = "MIT"
classifiers = [
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
]
packages = [
    { include = "django_activity_tracker" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.8.18,<4.0"

black = { version = "22.3.0", optional = true }
isort = { version = "^5.8.0", optional = true }
flake8 = { version = "^3.9.2", optional = true }
flake8-docstrings = { version = "^1.6.0", optional = true }
mypy = { version = "^0.900", optional = true }
pytest = { version = "^7.0.0", optional = true }
pytest-cov = { version = "^2.12.0", optional = true }
tox = { version = "^3.20.1", optional = true }
virtualenv = { version = "^20.2.2", optional = true }
pip = { version = "^20.3.1", optional = true }
mkdocs = { version = "^1.1.2", optional = true }
mkdocs-include-markdown-plugin = { version = "^1.0.0", optional = true }
mkdocs-material = { version = "^6.1.7", optional = true }
mkdocstrings = { version = "^0.15.2", optional = true }
mkdocs-material-extensions = { version = "^1.0.1", optional = true }
twine = { version = "^3.3.0", optional = true }
mkdocs-autorefs = { version = "^0.2.1", optional = true }
pre-commit = { version = "^2.12.0", optional = true }
toml = { version = "^0.10.2", optional = true }
bump2version = { version = "^1.0.1", optional = true }
pytest-django = { version = "^4.6.0", optional = true }
django = "^4.2.7"
djangorestframework = "^3.14.0"
pytest-xdist = { version = "^3.3.1", optional = true }
pytest-drf = { version = "^1.1.3", optional = true }
pytest-mock = { version = "^3.12.0", optional = true }
pytest-testmon = { version = "^2.1.0", optional = true }
pytest-watch = { version = "^4.2.0", optional = true }
mkdocs-macros-plugin = { version = "^1.0.5", optional = true }
jinja2 = { version = "2.11.1", optional = true }
markupsafe = { version = "2.0.1", optional = true }
pymdown-extensions = { version = "8.1.1", optional = true }
pygments = { version = "^2.16.1", optional = true }
django-mkdocs = { version = "^0.1.2", optional = true }

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "mypy",
    "flake8",
    "flake8-docstrings",
    "pytest-cov",
    "pytest-django",
    "pytest-xdist",
    "pytest-drf",
    "pytest-mock",
    "pytest-testmon",
    "pytest-watch",
]

dev = [
    "tox",
    "pre-commit",
    "virtualenv",
    "pip",
    "twine",
    "toml",
    "bump2version",
]

doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extension",
    "mkdocs-autorefs",
    "mkdocs-macros-plugin",
    "jinja2",
    "markupsafe",
    "pymdown-extensions",
    "pygments",
    "django-mkdocs",
]

[tool.black]
line-length = 88
skip-string-normalization = false
target-version = ['py38', 'py39', 'py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=django_activity_tracker --no-migrations --no-cov-on-fail"
filterwarnings = ["error", "ignore::DeprecationWarning"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
